<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.example</groupId>
	<artifactId>SpringBootRestCrudApp</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>SpringBootRestCrudApp</name>
	<description>Spring Boot + Restful</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.0.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<!-- jackson-dataformat-xml to convert the XML to java and Java to XML  -->
		<dependency>
		  <groupId>com.fasterxml.jackson.dataformat</groupId>
		  <artifactId>jackson-dataformat-xml</artifactId>
		</dependency>
		
		<!--  Spring Boot actuator configuration -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		
		<!--  Spring Boot Dev Tools -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>
		
		<!-- Spring security: Adding this tag will generate the default password with username as "user" 
		like "Using generated security password: 0c341556-0d19-42f2-8f09-8670a57b5b27" while running the spring boot app.
		This will be your password for your all Rest Service calls
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>-->
		
		<!--  Embedded Tomcat -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
		</dependency>
		
		<!--  JSP Support 
		<dependency>
			<artifactId>org.apache.tomcat.embed</artifactId>
			<groupId>tomcat-embed-jasper</groupId>
			<scope>provided</scope>
		</dependency> -->
		
		<!--  Spring boot test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<!--  The Spring Boot developer tools are not limited to 
				local development. You can also use several features when 
				running applications remotely. Remote support is opt-in.
				 To enable it, you need to make sure that devtools is included 
				 in the repackaged archive, as shown in the following listing: 
				 Then you need to set a spring.devtools.remote.secret property, as shown in the following example:
				 spring.devtools.remote.secret=mysecret
				 Remote devtools support is provided in two parts: 
				 a server-side endpoint that accepts connections and a client application 
				 that you run in your IDE. The server component is automatically 
				 enabled when the spring.devtools.remote.secret property is set. 
				 The client component must be launched manually.-->
				<configuration>
					<excludeDevtools>false</excludeDevtools>
				</configuration>
			</plugin>
		</plugins>
	</build>


</project>
